def node_require(script)
  require_relative '../node_modules/react-native/scripts/react_native_pods'
  require_relative '../node_modules/@react-native-community/cli-platform-ios/native_modules'
  require_relative '../node_modules/react-native-permissions/scripts/setup'
  
     require Pod::Executable.execute_command('node', ['-p',
       "require.resolve(
         '#{script}',
         {paths: [process.argv[1]]},
       )", __dir__]).strip
   end
  
   node_require('react-native/scripts/react_native_pods.rb')
   node_require('react-native-permissions/scripts/setup.rb')
   use_frameworks! :linkage => :static
   $RNFirebaseAsStaticFramework = true

  
  platform :ios, 13.4
  prepare_react_native_project!
  setup_permissions([
    'AppTrackingTransparency',
    'Calendars',
    'Camera',
    'Contacts',
    'FaceID',
    'LocationAccuracy',
    'LocationAlways',
    'LocationWhenInUse',
    'MediaLibrary',
    'Microphone',
    'Motion',
    'Notifications',
    'PhotoLibrary',
    'PhotoLibraryAddOnly',
    'Reminders',
    'Siri',
    'SpeechRecognition',
    'StoreKit',
  ])
  
  
  linkage = ENV['USE_FRAMEWORKS']
  if linkage != nil
    Pod::UI.puts "Configuring Pod with #{linkage}ally linked Frameworks".green
    use_frameworks! :linkage => linkage.to_sym
  end
  
  target 'AllIn' do
    config = use_native_modules!
  
    use_react_native!(
      :path => config[:reactNativePath],
      :hermes_enabled => config[:hermes_enabled],
      :app_path => "#{Pod::Config.instance.installation_root}/.."
    )
  
    target 'AllInTests' do
      inherit! :complete
    end
  
    post_install do |installer|
      react_native_post_install(
        installer,
        config[:reactNativePath],
        :mac_catalyst_enabled => false
      )
    end
  end
  